{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/GeorgesKfoury/Documents/GitHub/ISSProject-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Configs } from './../_configs/configs';\nimport * as i0 from \"@angular/core\";\nexport class AuthenticateService {\n  constructor() {}\n\n  isAuthenticated() {\n    const token = localStorage.getItem(Configs.tokenKey);\n\n    if (token && token.length > 0) {\n      let payLoad = atob(token.split('.')[1]);\n      return JSON.parse(payLoad).exp > Date.now() / 1000;\n    } else {\n      return false;\n    }\n  }\n\n  getType() {\n    const token = localStorage.getItem(Configs.tokenKey);\n\n    if (token && token.length > 0) {\n      let payLoad = atob(token.split('.')[1]);\n      return JSON.parse(atob(token.split('.')[1])).adminType;\n    } else {\n      return undefined;\n    }\n  }\n\n  checkToken() {\n    const userData = localStorage.getItem(Configs.tokenKey);\n\n    if (userData && userData.length > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  getInfo() {\n    const token = localStorage.getItem(Configs.tokenKey);\n\n    if (token) {\n      return JSON.parse(atob(token.split('.')[1]));\n    } else {\n      return '';\n    }\n  }\n\n  login(token) {\n    return _asyncToGenerator(function* () {\n      yield window.localStorage.removeItem(Configs.tokenKey);\n      yield window.localStorage.setItem(Configs.tokenKey, token);\n      return true;\n    })();\n  }\n\n  logout() {\n    return _asyncToGenerator(function* () {\n      yield localStorage.removeItem(Configs.tokenKey);\n      yield localStorage.clear();\n      return true;\n    })();\n  }\n\n}\n\nAuthenticateService.ɵfac = function AuthenticateService_Factory(t) {\n  return new (t || AuthenticateService)();\n};\n\nAuthenticateService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthenticateService,\n  factory: AuthenticateService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\Users\\GeorgesKfoury\\Documents\\GitHub\\ISSProject-frontend\\src\\app\\_guards\\authenticate.service.ts"],"names":[],"mappings":";AAAA,SAAS,OAAT,QAAwB,uBAAxB;;AAOA,OAAM,MAAO,mBAAP,CAA0B;AAE5B,EAAA,WAAA,GAAA,CAAiB;;AAEV,EAAA,eAAe,GAAA;AAClB,UAAM,KAAK,GAAG,YAAY,CAAC,OAAb,CAAqB,OAAO,CAAC,QAA7B,CAAd;;AACA,QAAI,KAAK,IAAI,KAAK,CAAC,MAAN,GAAe,CAA5B,EAA+B;AAC3B,UAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAD,CAAlB;AACA,aAAO,IAAI,CAAC,KAAL,CAAW,OAAX,EAAoB,GAApB,GAA0B,IAAI,CAAC,GAAL,KAAa,IAA9C;AACH,KAHD,MAGO;AACH,aAAO,KAAP;AACH;AACJ;;AAEM,EAAA,OAAO,GAAA;AACV,UAAM,KAAK,GAAG,YAAY,CAAC,OAAb,CAAqB,OAAO,CAAC,QAA7B,CAAd;;AACA,QAAI,KAAK,IAAI,KAAK,CAAC,MAAN,GAAe,CAA5B,EAA+B;AAC3B,UAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAD,CAAlB;AACA,aAAO,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,KAAK,CAAC,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAD,CAAf,EAAsC,SAA7C;AACH,KAHD,MAGO;AACH,aAAO,SAAP;AACH;AACJ;;AAEM,EAAA,UAAU,GAAA;AACb,UAAM,QAAQ,GAAG,YAAY,CAAC,OAAb,CAAqB,OAAO,CAAC,QAA7B,CAAjB;;AACA,QAAI,QAAQ,IAAI,QAAQ,CAAC,MAAT,GAAkB,CAAlC,EAAqC;AACjC,aAAO,IAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAP;AACH;AACJ;;AAGM,EAAA,OAAO,GAAA;AACV,UAAM,KAAK,GAAG,YAAY,CAAC,OAAb,CAAqB,OAAO,CAAC,QAA7B,CAAd;;AACA,QAAI,KAAJ,EAAW;AACP,aAAO,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,KAAK,CAAC,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAD,CAAf,CAAP;AACH,KAFD,MAEO;AACH,aAAO,EAAP;AACH;AACJ;;AAEY,EAAA,KAAK,CAAC,KAAD,EAAc;AAAA;AAC5B,YAAM,MAAM,CAAC,YAAP,CAAoB,UAApB,CAA+B,OAAO,CAAC,QAAvC,CAAN;AACA,YAAM,MAAM,CAAC,YAAP,CAAoB,OAApB,CAA4B,OAAO,CAAC,QAApC,EAA8C,KAA9C,CAAN;AACA,aAAO,IAAP;AAH4B;AAI/B;;AAEY,EAAA,MAAM,GAAA;AAAA;AACf,YAAM,YAAY,CAAC,UAAb,CAAwB,OAAO,CAAC,QAAhC,CAAN;AACA,YAAM,YAAY,CAAC,KAAb,EAAN;AACA,aAAO,IAAP;AAHe;AAIlB;;AArD2B;;;mBAAnB,mB;AAAmB,C;;;SAAnB,mB;AAAmB,EAAA,OAAA,EAAnB,mBAAmB,CAAA,I;AAAA,EAAA,UAAA,EAFhB","sourcesContent":["import { Configs } from './../_configs/configs';\r\nimport { Injectable } from '@angular/core';\r\nimport { User } from '../_shared/models/user';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthenticateService {\r\n\r\n    constructor() { }\r\n\r\n    public isAuthenticated(): boolean {\r\n        const token = localStorage.getItem(Configs.tokenKey);\r\n        if (token && token.length > 0) {\r\n            let payLoad = atob(token.split('.')[1]);\r\n            return JSON.parse(payLoad).exp > Date.now() / 1000;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public getType(): String | undefined {\r\n        const token = localStorage.getItem(Configs.tokenKey);\r\n        if (token && token.length > 0) {\r\n            let payLoad = atob(token.split('.')[1]);\r\n            return JSON.parse(atob(token.split('.')[1])).adminType;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    public checkToken(): boolean {\r\n        const userData = localStorage.getItem(Configs.tokenKey);\r\n        if (userData && userData.length > 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    public getInfo(): any {\r\n        const token = localStorage.getItem(Configs.tokenKey);\r\n        if (token) {\r\n            return JSON.parse(atob(token.split('.')[1]));\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    public async login(token: string) {\r\n        await window.localStorage.removeItem(Configs.tokenKey);\r\n        await window.localStorage.setItem(Configs.tokenKey, token);\r\n        return true;\r\n    }\r\n\r\n    public async logout() {\r\n        await localStorage.removeItem(Configs.tokenKey);\r\n        await localStorage.clear();\r\n        return true;\r\n    }\r\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}